package com.eparkingdb.dao.sqlProvider;

import com.common.entity.eparkingCloud.TParkInOut;
import com.common.entity.eparkingCloud.TParkInOutCriteria;
import com.common.entity.eparkingCloud.TParkInOutCriteria.Criteria;
import com.common.entity.eparkingCloud.TParkInOutCriteria.Criterion;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class TParkInOutSqlProvider {


    //private String parkID = "_"+ SessionUtil.getParkId().toString();

    /*public String sumPresentCar(TParkInOutCriteria example){
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("t_park_in_out"+parkID);
        applyWhere(sql, example, false);
        return sql.toString();
    }*/

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_in_out
     *
     * @mbg.generated
     */
    public String countByExample(TParkInOutCriteria example, Integer parkID) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("t_park_in_out_" + parkID);
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_in_out
     *
     * @mbg.generated
     */
    public String deleteByExample(TParkInOutCriteria example, Integer parkID) {
        SQL sql = new SQL();
        sql.DELETE_FROM("t_park_in_out_" + parkID);
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_in_out
     *
     * @mbg.generated
     */
    public String insertSelective(TParkInOut record, Integer parkID) {
        SQL sql = new SQL();
        sql.INSERT_INTO("t_park_in_out_" + parkID);

        if (record.getId() != null) {
            sql.VALUES("id", "#{record.id,jdbcType=VARCHAR}");
        }

        if (record.getActualPay() != null) {
            sql.VALUES("actual_pay", "#{record.actualPay,jdbcType=DOUBLE}");
        }

        if (record.getBeforePay() != null) {
            sql.VALUES("before_pay", "#{record.beforePay,jdbcType=DOUBLE}");
        }

        if (record.getCarNature() != null) {
            sql.VALUES("car_nature", "#{record.carNature,jdbcType=INTEGER}");
        }

        if (record.getChargeType() != null) {
            sql.VALUES("charge_type", "#{record.chargeType,jdbcType=INTEGER}");
        }

        if (record.getCompanyId() != null) {
            sql.VALUES("company_id", "#{record.companyId,jdbcType=INTEGER}");
        }

        if (record.getDutyPerson() != null) {
            sql.VALUES("duty_person", "#{record.dutyPerson,jdbcType=VARCHAR}");
        }

        if (record.getInCarPlate() != null) {
            sql.VALUES("in_car_plate", "#{record.inCarPlate,jdbcType=VARCHAR}");
        }

        if (record.getInCardCode() != null) {
            sql.VALUES("in_card_code", "#{record.inCardCode,jdbcType=VARCHAR}");
        }

        if (record.getInPicPath() != null) {
            sql.VALUES("in_pic_path", "#{record.inPicPath,jdbcType=VARCHAR}");
        }

        if (record.getInPortId() != null) {
            sql.VALUES("in_port_id", "#{record.inPortId,jdbcType=INTEGER}");
        }

        if (record.getInPortName() != null) {
            sql.VALUES("in_port_name", "#{record.inPortName,jdbcType=VARCHAR}");
        }

        if (record.getInTime() != null) {
            sql.VALUES("in_time", "#{record.inTime,jdbcType=VARCHAR}");
        }

        if (record.getInType() != null) {
            sql.VALUES("in_type", "#{record.inType,jdbcType=INTEGER}");
        }

        if (record.getInCarType() != null) {
            sql.VALUES("in_car_type", "#{record.inCarType,jdbcType=INTEGER}");
        }

        if (record.getInTypeDesc() != null) {
            sql.VALUES("in_type_desc", "#{record.inTypeDesc,jdbcType=VARCHAR}");
        }

        if (record.getNeedPay() != null) {
            sql.VALUES("need_pay", "#{record.needPay,jdbcType=DOUBLE}");
        }

        if (record.getOccurTime() != null) {
            sql.VALUES("occur_time", "#{record.occurTime,jdbcType=VARCHAR}");
        }

        if (record.getOutCarPlate() != null) {
            sql.VALUES("out_car_plate", "#{record.outCarPlate,jdbcType=VARCHAR}");
        }

        if (record.getOutCarType() != null) {
            sql.VALUES("out_car_type", "#{record.outCarType,jdbcType=INTEGER}");
        }

        if (record.getOutCardCode() != null) {
            sql.VALUES("out_card_code", "#{record.outCardCode,jdbcType=VARCHAR}");
        }

        if (record.getOutPicPath() != null) {
            sql.VALUES("out_pic_path", "#{record.outPicPath,jdbcType=VARCHAR}");
        }

        if (record.getOutPortId() != null) {
            sql.VALUES("out_port_id", "#{record.outPortId,jdbcType=INTEGER}");
        }

        if (record.getOutPortName() != null) {
            sql.VALUES("out_port_name", "#{record.outPortName,jdbcType=VARCHAR}");
        }

        if (record.getOutTime() != null) {
            sql.VALUES("out_time", "#{record.outTime,jdbcType=VARCHAR}");
        }

        if (record.getOutType() != null) {
            sql.VALUES("out_type", "#{record.outType,jdbcType=INTEGER}");
        }

        if (record.getOutTypeDesc() != null) {
            sql.VALUES("out_type_desc", "#{record.outTypeDesc,jdbcType=VARCHAR}");
        }

        if (record.getParkId() != null) {
            sql.VALUES("park_id", "#{record.parkId,jdbcType=INTEGER}");
        }

        if (record.getStopTime() != null) {
            sql.VALUES("stop_time", "#{record.stopTime,jdbcType=VARCHAR}");
        }

        if (record.getClientId() != null) {
            sql.VALUES("client_id", "#{record.clientId,jdbcType=INTEGER}");
        }

        if (record.getInSplitTime() != null) {
            sql.VALUES("in_split_time", "#{record.inSplitTime,jdbcType=VARCHAR}");
        }

        if (record.getOutSplitTime() != null) {
            sql.VALUES("out_split_time", "#{record.outSplitTime,jdbcType=VARCHAR}");
        }

        if (record.getFirstInTime() != null) {
            sql.VALUES("first_in_time", "#{record.firstInTime,jdbcType=VARCHAR}");
        }

        if (record.getDayPay() != null) {
            sql.VALUES("day_pay", "#{record.dayPay,jdbcType=DOUBLE}");
        }

        if (record.getOperatingId() != null) {
            sql.VALUES("operating_id", "#{record.operatingId,jdbcType=INTEGER}");
        }

        if (record.getOperatingName() != null) {
            sql.VALUES("operating_name", "#{record.operatingName,jdbcType=VARCHAR}");
        }

        if (record.getCoupon() != null) {
            sql.VALUES("coupon", "#{record.coupon,jdbcType=DOUBLE}");
        }

        if (record.getOperatingType() != null) {
            sql.VALUES("operating_type", "#{record.operatingType,jdbcType=INTEGER}");
        }

        if (record.getPid() != null) {
            sql.VALUES("pid", "#{record.pid,jdbcType=INTEGER}");
        }

        if (record.getOrderId() != null) {
            sql.VALUES("order_id", "#{record.orderId,jdbcType=VARCHAR}");
        }

        if (record.getQpassPay() != null) {
            sql.VALUES("qpass_pay", "#{record.qpassPay,jdbcType=DOUBLE}");
        }

        if (record.getMerchantId() != null) {
            sql.VALUES("merchant_id", "#{record.merchantId,jdbcType=INTEGER}");
        }

        if (record.getSectimePayed() != null) {
            sql.VALUES("secTime_Payed", "#{record.sectimePayed,jdbcType=DOUBLE}");
        }

        if (record.getSectimeStart() != null) {
            sql.VALUES("secTime_Start", "#{record.sectimeStart,jdbcType=VARCHAR}");
        }

        if (record.getEpaytype() != null) {
            sql.VALUES("ePayType", "#{record.epaytype,jdbcType=INTEGER}");
        }

        if (record.getGovInUpFlag() != null) {
            sql.VALUES("gov_in_up_flag", "#{record.govInUpFlag,jdbcType=INTEGER}");
        }

        if (record.getGovOutUpFlag() != null) {
            sql.VALUES("gov_out_up_flag", "#{record.govOutUpFlag,jdbcType=INTEGER}");
        }

        if (record.getInCarPlateColor() != null) {
            sql.VALUES("in_car_plate_color", "#{record.inCarPlateColor,jdbcType=VARCHAR}");
        }

        if (record.getOutCarPlateColor() != null) {
            sql.VALUES("out_car_plate_color", "#{record.outCarPlateColor,jdbcType=VARCHAR}");
        }

        if (record.getPrepayType() != null) {
            sql.VALUES("prepay_type", "#{record.prepayType,jdbcType=INTEGER}");
        }

        if (record.getLocalcoupon() != null) {
            sql.VALUES("localcoupon", "#{record.localcoupon,jdbcType=DOUBLE}");
        }

        if (record.getLocalcouponName() != null) {
            sql.VALUES("localcoupon_name", "#{record.localcouponName,jdbcType=VARCHAR}");
        }

        if (record.getLocalcouponRuleId() != null) {
            sql.VALUES("localCoupon_rule_id", "#{record.localcouponRuleId,jdbcType=INTEGER}");
        }

        if (record.getUpdatedincarplate() != null) {
            sql.VALUES("updatedInCarplate", "#{record.updatedincarplate,jdbcType=VARCHAR}");
        }

        if (record.getUpdatedoutcarplate() != null) {
            sql.VALUES("updatedOutCarplate", "#{record.updatedoutcarplate,jdbcType=VARCHAR}");
        }

        if (record.getCouponType() != null) {
            sql.VALUES("coupon_type", "#{record.couponType,jdbcType=INTEGER}");
        }

        if (record.getBillingStatus() != null) {
            sql.VALUES("billing_status", "#{record.billingStatus,jdbcType=VARCHAR}");
        }

        if (record.getCloudOrderId() != null) {
            sql.VALUES("cloud_order_id", "#{record.cloudOrderId,jdbcType=VARCHAR}");
        }

        if (record.getSettleDate() != null) {
            sql.VALUES("settle_date", "#{record.settleDate,jdbcType=VARCHAR}");
        }

        if (record.getSettleDate() != null) {
            sql.VALUES("cash_pay_code", "#{record.cashPayCode,jdbcType=VARCHAR}");
        }
        if (record.getSettleDate() != null) {
            sql.VALUES("pre_pay_code", "#{record.prePayCode,jdbcType=VARCHAR}");
        }
        if (record.getSettleDate() != null) {
            sql.VALUES("behalf_pay_code", "#{record.behalfPayCode,jdbcType=VARCHAR}");
        }
        if (record.getSettleDate() != null) {
            sql.VALUES("q_pass_pay_code", "#{record.qPassPayCode,jdbcType=VARCHAR}");
        }
        if (record.getSettleDate() != null) {
            sql.VALUES("free_pay_code", "#{record.freePayCode,jdbcType=VARCHAR}");
        }
        if (record.getSettleDate() != null) {
            sql.VALUES("charge_type_desc", "#{record.chargeTypeDesc,jdbcType=VARCHAR}");
        }
        if (record.getSettleDate() != null) {
            sql.VALUES("remarks", "#{record.remarks,jdbcType=VARCHAR}");
        }
        if (record.getSettleDate() != null) {
            sql.VALUES("car_nature_desc", "#{record.carNatureDesc,jdbcType=VARCHAR}");
        }
        if (record.getSettleDate() != null) {
            sql.VALUES("car_status", "#{record.carStatus,jdbcType=INTEGER}");
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_in_out
     *
     * @mbg.generated
     */
    public String selectByExample(TParkInOutCriteria example, Integer parkID) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("id");
        } else {
            sql.SELECT("id");
        }
        sql.SELECT("actual_pay");
        sql.SELECT("before_pay");
        sql.SELECT("car_nature");
        sql.SELECT("charge_type");
        sql.SELECT("company_id");
        sql.SELECT("duty_person");
        sql.SELECT("in_car_plate");
        sql.SELECT("in_card_code");
        sql.SELECT("in_pic_path");
        sql.SELECT("in_port_id");
        sql.SELECT("in_port_name");
        sql.SELECT("in_time");
        sql.SELECT("in_type");
        sql.SELECT("in_type_desc");
        sql.SELECT("need_pay");
        sql.SELECT("occur_time");
        sql.SELECT("out_car_plate");
        sql.SELECT("out_car_type");
        sql.SELECT("out_card_code");
        sql.SELECT("out_pic_path");
        sql.SELECT("out_port_id");
        sql.SELECT("out_port_name");
        sql.SELECT("out_time");
        sql.SELECT("out_type");
        sql.SELECT("out_type_desc");
        sql.SELECT("park_id");
        sql.SELECT("stop_time");
        sql.SELECT("client_id");
        sql.SELECT("in_split_time");
        sql.SELECT("out_split_time");
        sql.SELECT("first_in_time");
        sql.SELECT("day_pay");
        sql.SELECT("operating_id");
        sql.SELECT("operating_name");
        sql.SELECT("coupon");
        sql.SELECT("operating_type");
        sql.SELECT("pid");
        sql.SELECT("order_id");
        sql.SELECT("qpass_pay");
        sql.SELECT("merchant_id");
        sql.SELECT("secTime_Payed");
        sql.SELECT("secTime_Start");
        sql.SELECT("ePayType");
        sql.SELECT("gov_in_up_flag");
        sql.SELECT("gov_out_up_flag");
        sql.SELECT("in_car_plate_color");
        sql.SELECT("out_car_plate_color");
        sql.SELECT("prepay_type");
        sql.SELECT("localcoupon");
        sql.SELECT("localcoupon_name");
        sql.SELECT("localCoupon_rule_id");
        sql.SELECT("updatedInCarplate");
        sql.SELECT("updatedOutCarplate");
        sql.SELECT("coupon_type");
        sql.SELECT("billing_status");
        sql.SELECT("cloud_order_id");
        sql.SELECT("settle_date");
        sql.SELECT("cash_pay_code");
        sql.SELECT("pre_pay_code");
        sql.SELECT("behalf_pay_code");
        sql.SELECT("q_pass_pay_code");
        sql.SELECT("free_pay_code");
        sql.SELECT("charge_type_desc");
        sql.SELECT("remarks");
        sql.SELECT("car_nature_desc");
        sql.SELECT("car_status");
        sql.FROM("t_park_in_out_" + parkID);
        applyWhere(sql, example, true);

        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }

        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_in_out
     *
     * @mbg.generated
     */
    public String updateByExampleSelective(Map<String, Object> parameter, Integer parkID) {
        TParkInOut record = (TParkInOut) parameter.get("record");
        TParkInOutCriteria example = (TParkInOutCriteria) parameter.get("example");

        SQL sql = new SQL();
        sql.UPDATE("t_park_in_out_" + parkID);

        if (record.getId() != null) {
            sql.SET("id = #{record.id,jdbcType=VARCHAR}");
        }

        if (record.getActualPay() != null) {
            sql.SET("actual_pay = #{record.actualPay,jdbcType=DOUBLE}");
        }

        if (record.getBeforePay() != null) {
            sql.SET("before_pay = #{record.beforePay,jdbcType=DOUBLE}");
        }

        if (record.getCarNature() != null) {
            sql.SET("car_nature = #{record.carNature,jdbcType=INTEGER}");
        }

        if (record.getChargeType() != null) {
            sql.SET("charge_type = #{record.chargeType,jdbcType=INTEGER}");
        }

        if (record.getCompanyId() != null) {
            sql.SET("company_id = #{record.companyId,jdbcType=INTEGER}");
        }

        if (record.getDutyPerson() != null) {
            sql.SET("duty_person = #{record.dutyPerson,jdbcType=VARCHAR}");
        }

        if (record.getInCarPlate() != null) {
            sql.SET("in_car_plate = #{record.inCarPlate,jdbcType=VARCHAR}");
        }

        if (record.getInCardCode() != null) {
            sql.SET("in_card_code = #{record.inCardCode,jdbcType=VARCHAR}");
        }

        if (record.getInPicPath() != null) {
            sql.SET("in_pic_path = #{record.inPicPath,jdbcType=VARCHAR}");
        }

        if (record.getInPortId() != null) {
            sql.SET("in_port_id = #{record.inPortId,jdbcType=INTEGER}");
        }

        if (record.getInPortName() != null) {
            sql.SET("in_port_name = #{record.inPortName,jdbcType=VARCHAR}");
        }

        if (record.getInTime() != null) {
            sql.SET("in_time = #{record.inTime,jdbcType=VARCHAR}");
        }

        if (record.getInType() != null) {
            sql.SET("in_type = #{record.inType,jdbcType=INTEGER}");
        }

        if (record.getInCarType() != null) {
            sql.SET("in_car_type = #{record.inCarType,jdbcType=INTEGER}");
        }

        if (record.getInTypeDesc() != null) {
            sql.SET("in_type_desc = #{record.inTypeDesc,jdbcType=VARCHAR}");
        }

        if (record.getNeedPay() != null) {
            sql.SET("need_pay = #{record.needPay,jdbcType=DOUBLE}");
        }

        if (record.getOccurTime() != null) {
            sql.SET("occur_time = #{record.occurTime,jdbcType=VARCHAR}");
        }

        if (record.getOutCarPlate() != null) {
            sql.SET("out_car_plate = #{record.outCarPlate,jdbcType=VARCHAR}");
        }

        if (record.getOutCarType() != null) {
            sql.SET("out_car_type = #{record.outCarType,jdbcType=INTEGER}");
        }

        if (record.getOutCardCode() != null) {
            sql.SET("out_card_code = #{record.outCardCode,jdbcType=VARCHAR}");
        }

        if (record.getOutPicPath() != null) {
            sql.SET("out_pic_path = #{record.outPicPath,jdbcType=VARCHAR}");
        }

        if (record.getOutPortId() != null) {
            sql.SET("out_port_id = #{record.outPortId,jdbcType=INTEGER}");
        }

        if (record.getOutPortName() != null) {
            sql.SET("out_port_name = #{record.outPortName,jdbcType=VARCHAR}");
        }

        if (record.getOutTime() != null) {
            sql.SET("out_time = #{record.outTime,jdbcType=VARCHAR}");
        }

        if (record.getOutType() != null) {
            sql.SET("out_type = #{record.outType,jdbcType=INTEGER}");
        }

        if (record.getOutTypeDesc() != null) {
            sql.SET("out_type_desc = #{record.outTypeDesc,jdbcType=VARCHAR}");
        }

        if (record.getParkId() != null) {
            sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        }

        if (record.getStopTime() != null) {
            sql.SET("stop_time = #{record.stopTime,jdbcType=VARCHAR}");
        }

        if (record.getClientId() != null) {
            sql.SET("client_id = #{record.clientId,jdbcType=INTEGER}");
        }

        if (record.getInSplitTime() != null) {
            sql.SET("in_split_time = #{record.inSplitTime,jdbcType=VARCHAR}");
        }

        if (record.getOutSplitTime() != null) {
            sql.SET("out_split_time = #{record.outSplitTime,jdbcType=VARCHAR}");
        }

        if (record.getFirstInTime() != null) {
            sql.SET("first_in_time = #{record.firstInTime,jdbcType=VARCHAR}");
        }

        if (record.getDayPay() != null) {
            sql.SET("day_pay = #{record.dayPay,jdbcType=DOUBLE}");
        }

        if (record.getOperatingId() != null) {
            sql.SET("operating_id = #{record.operatingId,jdbcType=INTEGER}");
        }

        if (record.getOperatingName() != null) {
            sql.SET("operating_name = #{record.operatingName,jdbcType=VARCHAR}");
        }

        if (record.getCoupon() != null) {
            sql.SET("coupon = #{record.coupon,jdbcType=DOUBLE}");
        }

        if (record.getOperatingType() != null) {
            sql.SET("operating_type = #{record.operatingType,jdbcType=INTEGER}");
        }

        if (record.getPid() != null) {
            sql.SET("pid = #{record.pid,jdbcType=INTEGER}");
        }

        if (record.getOrderId() != null) {
            sql.SET("order_id = #{record.orderId,jdbcType=VARCHAR}");
        }

        if (record.getQpassPay() != null) {
            sql.SET("qpass_pay = #{record.qpassPay,jdbcType=DOUBLE}");
        }

        if (record.getMerchantId() != null) {
            sql.SET("merchant_id = #{record.merchantId,jdbcType=INTEGER}");
        }

        if (record.getSectimePayed() != null) {
            sql.SET("secTime_Payed = #{record.sectimePayed,jdbcType=DOUBLE}");
        }

        if (record.getSectimeStart() != null) {
            sql.SET("secTime_Start = #{record.sectimeStart,jdbcType=VARCHAR}");
        }

        if (record.getEpaytype() != null) {
            sql.SET("ePayType = #{record.epaytype,jdbcType=INTEGER}");
        }

        if (record.getGovInUpFlag() != null) {
            sql.SET("gov_in_up_flag = #{record.govInUpFlag,jdbcType=INTEGER}");
        }

        if (record.getGovOutUpFlag() != null) {
            sql.SET("gov_out_up_flag = #{record.govOutUpFlag,jdbcType=INTEGER}");
        }

        if (record.getInCarPlateColor() != null) {
            sql.SET("in_car_plate_color = #{record.inCarPlateColor,jdbcType=VARCHAR}");
        }

        if (record.getOutCarPlateColor() != null) {
            sql.SET("out_car_plate_color = #{record.outCarPlateColor,jdbcType=VARCHAR}");
        }

        if (record.getPrepayType() != null) {
            sql.SET("prepay_type = #{record.prepayType,jdbcType=INTEGER}");
        }

        if (record.getLocalcoupon() != null) {
            sql.SET("localcoupon = #{record.localcoupon,jdbcType=DOUBLE}");
        }

        if (record.getLocalcouponName() != null) {
            sql.SET("localcoupon_name = #{record.localcouponName,jdbcType=VARCHAR}");
        }

        if (record.getLocalcouponRuleId() != null) {
            sql.SET("localCoupon_rule_id = #{record.localcouponRuleId,jdbcType=INTEGER}");
        }

        if (record.getUpdatedincarplate() != null) {
            sql.SET("updatedInCarplate = #{record.updatedincarplate,jdbcType=VARCHAR}");
        }

        if (record.getUpdatedoutcarplate() != null) {
            sql.SET("updatedOutCarplate = #{record.updatedoutcarplate,jdbcType=VARCHAR}");
        }

        if (record.getCouponType() != null) {
            sql.SET("coupon_type = #{record.couponType,jdbcType=INTEGER}");
        }

        if (record.getBillingStatus() != null) {
            sql.SET("billing_status = #{record.billingStatus,jdbcType=VARCHAR}");
        }

        if (record.getCloudOrderId() != null) {
            sql.SET("cloud_order_id = #{record.cloudOrderId,jdbcType=VARCHAR}");
        }

        if (record.getSettleDate() != null) {
            sql.SET("settle_date = #{record.settleDate,jdbcType=VARCHAR}");
        }

        if (record.getCashPayCode() != null) {
            sql.SET("cash_pay_code = #{record.cashPayCode,jdbcType=VARCHAR}");
        }

        if (record.getPrePayCode() != null) {
            sql.SET("pre_pay_code = #{record.prePayCode,jdbcType=VARCHAR}");
        }

        if (record.getBehalfPayCode() != null) {
            sql.SET("behalf_pay_code = #{record.behalfPayCode,jdbcType=VARCHAR}");
        }

        if (record.getqPassPayCode() != null) {
            sql.SET("q_pass_pay_code = #{record.qPassPayCode,jdbcType=VARCHAR}");
        }

        if (record.getFreePayCode() != null) {
            sql.SET("free_pay_code = #{record.freePayCode,jdbcType=VARCHAR}");
        }

        if (record.getChargeTypeDesc() != null) {
            sql.SET("charge_type_desc = #{record.chargeTypeDesc,jdbcType=VARCHAR}");
        }

        if (record.getRemarks() != null) {
            sql.SET("remarks = #{record.remarks,jdbcType=VARCHAR}");
        }

        if (record.getCarNatureDesc() != null) {
            sql.SET("car_nature_desc = #{record.carNatureDesc,jdbcType=VARCHAR}");
        }

        if (record.getCarStatus() != null) {
            sql.SET("car_status = #{record.carStatus,jdbcType=INTEGER}");
        }

        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_in_out
     *
     * @mbg.generated
     */
    public String updateByExample(Map<String, Object> parameter, Integer parkID) {
        SQL sql = new SQL();
        sql.UPDATE("t_park_in_out_" + parkID);

        sql.SET("id = #{record.id,jdbcType=VARCHAR}");
        sql.SET("actual_pay = #{record.actualPay,jdbcType=DOUBLE}");
        sql.SET("before_pay = #{record.beforePay,jdbcType=DOUBLE}");
        sql.SET("car_nature = #{record.carNature,jdbcType=INTEGER}");
        sql.SET("charge_type = #{record.chargeType,jdbcType=INTEGER}");
        sql.SET("company_id = #{record.companyId,jdbcType=INTEGER}");
        sql.SET("duty_person = #{record.dutyPerson,jdbcType=VARCHAR}");
        sql.SET("in_car_plate = #{record.inCarPlate,jdbcType=VARCHAR}");
        sql.SET("in_card_code = #{record.inCardCode,jdbcType=VARCHAR}");
        sql.SET("in_pic_path = #{record.inPicPath,jdbcType=VARCHAR}");
        sql.SET("in_port_id = #{record.inPortId,jdbcType=INTEGER}");
        sql.SET("in_port_name = #{record.inPortName,jdbcType=VARCHAR}");
        sql.SET("in_time = #{record.inTime,jdbcType=VARCHAR}");
        sql.SET("in_type = #{record.inType,jdbcType=INTEGER}");
        sql.SET("in_car_type = #{record.inCarType,jdbcType=INTEGER}");
        sql.SET("in_type_desc = #{record.inTypeDesc,jdbcType=VARCHAR}");
        sql.SET("need_pay = #{record.needPay,jdbcType=DOUBLE}");
        sql.SET("occur_time = #{record.occurTime,jdbcType=VARCHAR}");
        sql.SET("out_car_plate = #{record.outCarPlate,jdbcType=VARCHAR}");
        sql.SET("out_car_type = #{record.outCarType,jdbcType=INTEGER}");
        sql.SET("out_card_code = #{record.outCardCode,jdbcType=VARCHAR}");
        sql.SET("out_pic_path = #{record.outPicPath,jdbcType=VARCHAR}");
        sql.SET("out_port_id = #{record.outPortId,jdbcType=INTEGER}");
        sql.SET("out_port_name = #{record.outPortName,jdbcType=VARCHAR}");
        sql.SET("out_time = #{record.outTime,jdbcType=VARCHAR}");
        sql.SET("out_type = #{record.outType,jdbcType=INTEGER}");
        sql.SET("out_type_desc = #{record.outTypeDesc,jdbcType=VARCHAR}");
        sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        sql.SET("stop_time = #{record.stopTime,jdbcType=VARCHAR}");
        sql.SET("client_id = #{record.clientId,jdbcType=INTEGER}");
        sql.SET("in_split_time = #{record.inSplitTime,jdbcType=VARCHAR}");
        sql.SET("out_split_time = #{record.outSplitTime,jdbcType=VARCHAR}");
        sql.SET("first_in_time = #{record.firstInTime,jdbcType=VARCHAR}");
        sql.SET("day_pay = #{record.dayPay,jdbcType=DOUBLE}");
        sql.SET("operating_id = #{record.operatingId,jdbcType=INTEGER}");
        sql.SET("operating_name = #{record.operatingName,jdbcType=VARCHAR}");
        sql.SET("coupon = #{record.coupon,jdbcType=DOUBLE}");
        sql.SET("operating_type = #{record.operatingType,jdbcType=INTEGER}");
        sql.SET("pid = #{record.pid,jdbcType=INTEGER}");
        sql.SET("order_id = #{record.orderId,jdbcType=VARCHAR}");
        sql.SET("qpass_pay = #{record.qpassPay,jdbcType=DOUBLE}");
        sql.SET("merchant_id = #{record.merchantId,jdbcType=INTEGER}");
        sql.SET("secTime_Payed = #{record.sectimePayed,jdbcType=DOUBLE}");
        sql.SET("secTime_Start = #{record.sectimeStart,jdbcType=VARCHAR}");
        sql.SET("ePayType = #{record.epaytype,jdbcType=INTEGER}");
        sql.SET("gov_in_up_flag = #{record.govInUpFlag,jdbcType=INTEGER}");
        sql.SET("gov_out_up_flag = #{record.govOutUpFlag,jdbcType=INTEGER}");
        sql.SET("in_car_plate_color = #{record.inCarPlateColor,jdbcType=VARCHAR}");
        sql.SET("out_car_plate_color = #{record.outCarPlateColor,jdbcType=VARCHAR}");
        sql.SET("prepay_type = #{record.prepayType,jdbcType=INTEGER}");
        sql.SET("localcoupon = #{record.localcoupon,jdbcType=DOUBLE}");
        sql.SET("localcoupon_name = #{record.localcouponName,jdbcType=VARCHAR}");
        sql.SET("localCoupon_rule_id = #{record.localcouponRuleId,jdbcType=INTEGER}");
        sql.SET("updatedInCarplate = #{record.updatedincarplate,jdbcType=VARCHAR}");
        sql.SET("updatedOutCarplate = #{record.updatedoutcarplate,jdbcType=VARCHAR}");
        sql.SET("coupon_type = #{record.couponType,jdbcType=INTEGER}");
        sql.SET("billing_status = #{record.billingStatus,jdbcType=VARCHAR}");
        sql.SET("cloud_order_id = #{record.cloudOrderId,jdbcType=VARCHAR}");
        sql.SET("settle_date = #{record.settleDate,jdbcType=VARCHAR}");
        sql.SET("cash_pay_code = #{cashPayCode,jdbcType=VARCHAR}");
        sql.SET("pre_pay_code = #{prePayCode,jdbcType=VARCHAR}");
        sql.SET("behalf_pay_code = #{behalfPayCode,jdbcType=VARCHAR}");
        sql.SET("q_pass_pay_code = #{qPassPayCode,jdbcType=VARCHAR}");
        sql.SET("free_pay_code = #{freePayCode,jdbcType=VARCHAR}");
        sql.SET("charge_type_desc = #{chargeTypeDesc,jdbcType=VARCHAR}");
        sql.SET("remarks = #{remarks,jdbcType=VARCHAR}");
        sql.SET("car_nature_desc = #{carNatureDesc,jdbcType=VARCHAR}");
        sql.SET("car_status = #{carStatus,jdbcType=VARCHAR}");
        TParkInOutCriteria example = (TParkInOutCriteria) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_in_out
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(TParkInOut record, Integer parkID) {
        SQL sql = new SQL();
        sql.UPDATE("t_park_in_out_" + parkID);

        if (record.getActualPay() != null) {
            sql.SET("actual_pay = #{record.actualPay,jdbcType=DOUBLE}");
        }

        if (record.getBeforePay() != null) {
            sql.SET("before_pay = #{record.beforePay,jdbcType=DOUBLE}");
        }

        if (record.getCarNature() != null) {
            sql.SET("car_nature = #{record.carNature,jdbcType=INTEGER}");
        }

        if (record.getChargeType() != null) {
            sql.SET("charge_type = #{record.chargeType,jdbcType=INTEGER}");
        }

        if (record.getCompanyId() != null) {
            sql.SET("company_id = #{record.companyId,jdbcType=INTEGER}");
        }

        if (record.getDutyPerson() != null) {
            sql.SET("duty_person = #{record.dutyPerson,jdbcType=VARCHAR}");
        }

        if (record.getInCarPlate() != null) {
            sql.SET("in_car_plate = #{record.inCarPlate,jdbcType=VARCHAR}");
        }

        if (record.getInCardCode() != null) {
            sql.SET("in_card_code = #{record.inCardCode,jdbcType=VARCHAR}");
        }

        if (record.getInPicPath() != null) {
            sql.SET("in_pic_path = #{record.inPicPath,jdbcType=VARCHAR}");
        }

        if (record.getInPortId() != null) {
            sql.SET("in_port_id = #{record.inPortId,jdbcType=INTEGER}");
        }

        if (record.getInPortName() != null) {
            sql.SET("in_port_name = #{record.inPortName,jdbcType=VARCHAR}");
        }

        if (record.getInTime() != null) {
            sql.SET("in_time = #{record.inTime,jdbcType=VARCHAR}");
        }

        if (record.getInType() != null) {
            sql.SET("in_type = #{record.inType,jdbcType=INTEGER}");
        }

        if (record.getInCarType() != null) {
            sql.SET("in_car_type = #{record.inCarType,jdbcType=INTEGER}");
        }

        if (record.getInTypeDesc() != null) {
            sql.SET("in_type_desc = #{record.inTypeDesc,jdbcType=VARCHAR}");
        }

        if (record.getNeedPay() != null) {
            sql.SET("need_pay = #{record.needPay,jdbcType=DOUBLE}");
        }

        if (record.getOccurTime() != null) {
            sql.SET("occur_time = #{record.occurTime,jdbcType=VARCHAR}");
        }

        if (record.getOutCarPlate() != null) {
            sql.SET("out_car_plate = #{record.outCarPlate,jdbcType=VARCHAR}");
        }

        if (record.getOutCarType() != null) {
            sql.SET("out_car_type = #{record.outCarType,jdbcType=INTEGER}");
        }

        if (record.getOutCardCode() != null) {
            sql.SET("out_card_code = #{record.outCardCode,jdbcType=VARCHAR}");
        }

        if (record.getOutPicPath() != null) {
            sql.SET("out_pic_path = #{record.outPicPath,jdbcType=VARCHAR}");
        }

        if (record.getOutPortId() != null) {
            sql.SET("out_port_id = #{record.outPortId,jdbcType=INTEGER}");
        }

        if (record.getOutPortName() != null) {
            sql.SET("out_port_name = #{record.outPortName,jdbcType=VARCHAR}");
        }

        if (record.getOutTime() != null) {
            sql.SET("out_time = #{record.outTime,jdbcType=VARCHAR}");
        }

        if (record.getOutType() != null) {
            sql.SET("out_type = #{record.outType,jdbcType=INTEGER}");
        }

        if (record.getOutTypeDesc() != null) {
            sql.SET("out_type_desc = #{record.outTypeDesc,jdbcType=VARCHAR}");
        }

        if (record.getParkId() != null) {
            sql.SET("park_id = #{record.parkId,jdbcType=INTEGER}");
        }

        if (record.getStopTime() != null) {
            sql.SET("stop_time = #{record.stopTime,jdbcType=VARCHAR}");
        }

        if (record.getClientId() != null) {
            sql.SET("client_id = #{record.clientId,jdbcType=INTEGER}");
        }

        if (record.getInSplitTime() != null) {
            sql.SET("in_split_time = #{record.inSplitTime,jdbcType=VARCHAR}");
        }

        if (record.getOutSplitTime() != null) {
            sql.SET("out_split_time = #{record.outSplitTime,jdbcType=VARCHAR}");
        }

        if (record.getFirstInTime() != null) {
            sql.SET("first_in_time = #{record.firstInTime,jdbcType=VARCHAR}");
        }

        if (record.getDayPay() != null) {
            sql.SET("day_pay = #{record.dayPay,jdbcType=DOUBLE}");
        }

        if (record.getOperatingId() != null) {
            sql.SET("operating_id = #{record.operatingId,jdbcType=INTEGER}");
        }

        if (record.getOperatingName() != null) {
            sql.SET("operating_name = #{record.operatingName,jdbcType=VARCHAR}");
        }

        if (record.getCoupon() != null) {
            sql.SET("coupon = #{record.coupon,jdbcType=DOUBLE}");
        }

        if (record.getOperatingType() != null) {
            sql.SET("operating_type = #{record.operatingType,jdbcType=INTEGER}");
        }

        if (record.getPid() != null) {
            sql.SET("pid = #{record.pid,jdbcType=INTEGER}");
        }

        if (record.getOrderId() != null) {
            sql.SET("order_id = #{record.orderId,jdbcType=VARCHAR}");
        }

        if (record.getQpassPay() != null) {
            sql.SET("qpass_pay = #{record.qpassPay,jdbcType=DOUBLE}");
        }

        if (record.getMerchantId() != null) {
            sql.SET("merchant_id = #{record.merchantId,jdbcType=INTEGER}");
        }

        if (record.getSectimePayed() != null) {
            sql.SET("secTime_Payed = #{record.sectimePayed,jdbcType=DOUBLE}");
        }

        if (record.getSectimeStart() != null) {
            sql.SET("secTime_Start = #{record.sectimeStart,jdbcType=VARCHAR}");
        }

        if (record.getEpaytype() != null) {
            sql.SET("ePayType = #{record.epaytype,jdbcType=INTEGER}");
        }

        if (record.getGovInUpFlag() != null) {
            sql.SET("gov_in_up_flag = #{record.govInUpFlag,jdbcType=INTEGER}");
        }

        if (record.getGovOutUpFlag() != null) {
            sql.SET("gov_out_up_flag = #{record.govOutUpFlag,jdbcType=INTEGER}");
        }

        if (record.getInCarPlateColor() != null) {
            sql.SET("in_car_plate_color = #{record.inCarPlateColor,jdbcType=VARCHAR}");
        }

        if (record.getOutCarPlateColor() != null) {
            sql.SET("out_car_plate_color = #{record.outCarPlateColor,jdbcType=VARCHAR}");
        }

        if (record.getPrepayType() != null) {
            sql.SET("prepay_type = #{record.prepayType,jdbcType=INTEGER}");
        }

        if (record.getLocalcoupon() != null) {
            sql.SET("localcoupon = #{record.localcoupon,jdbcType=DOUBLE}");
        }

        if (record.getLocalcouponName() != null) {
            sql.SET("localcoupon_name = #{record.localcouponName,jdbcType=VARCHAR}");
        }

        if (record.getLocalcouponRuleId() != null) {
            sql.SET("localCoupon_rule_id = #{record.localcouponRuleId,jdbcType=INTEGER}");
        }

        if (record.getUpdatedincarplate() != null) {
            sql.SET("updatedInCarplate = #{record.updatedincarplate,jdbcType=VARCHAR}");
        }

        if (record.getUpdatedoutcarplate() != null) {
            sql.SET("updatedOutCarplate = #{record.updatedoutcarplate,jdbcType=VARCHAR}");
        }

        if (record.getCouponType() != null) {
            sql.SET("coupon_type = #{record.couponType,jdbcType=INTEGER}");
        }

        if (record.getBillingStatus() != null) {
            sql.SET("billing_status = #{record.billingStatus,jdbcType=VARCHAR}");
        }

        if (record.getCloudOrderId() != null) {
            sql.SET("cloud_order_id = #{record.cloudOrderId,jdbcType=VARCHAR}");
        }

        if (record.getSettleDate() != null) {
            sql.SET("settle_date = #{record.settleDate,jdbcType=VARCHAR}");
        }

        if (record.getCashPayCode() != null) {
            sql.SET("cash_pay_code = #{record.cashPayCode,jdbcType=VARCHAR}");
        }

        if (record.getPrePayCode() != null) {
            sql.SET("pre_pay_code = #{record.prePayCode,jdbcType=VARCHAR}");
        }

        if (record.getBehalfPayCode() != null) {
            sql.SET("behalf_pay_code = #{record.behalfPayCode,jdbcType=VARCHAR}");
        }

        if (record.getqPassPayCode() != null) {
            sql.SET("q_pass_pay_code = #{record.qPassPayCode,jdbcType=VARCHAR}");
        }

        if (record.getFreePayCode() != null) {
            sql.SET("free_pay_code = #{record.freePayCode,jdbcType=VARCHAR}");
        }

        if (record.getChargeTypeDesc() != null) {
            sql.SET("charge_type_desc = #{record.chargeTypeDesc,jdbcType=VARCHAR}");
        }

        if (record.getRemarks() != null) {
            sql.SET("remarks = #{record.remarks,jdbcType=VARCHAR}");
        }

        if (record.getCarNatureDesc() != null) {
            sql.SET("car_nature_desc = #{record.carNatureDesc,jdbcType=VARCHAR}");
        }

        if (record.getCarStatus() != null) {
            sql.SET("car_status = #{record.carStatus,jdbcType=INTEGER}");
        }
        sql.WHERE("id = #{record.id,jdbcType=VARCHAR}");

        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_in_out
     *
     * @mbg.generated
     */
    protected void applyWhere(SQL sql, TParkInOutCriteria example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}