package com.eparkingdb.dao;

import com.common.entity.eparkingCloud.TParkPort;
import com.common.entity.eparkingCloud.TParkPortCriteria;
import com.eparkingdb.dao.sqlProvider.TParkPortSqlProvider;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface TParkPortMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @SelectProvider(type= TParkPortSqlProvider.class, method="countByExample")
    long countByExample(TParkPortCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TParkPortSqlProvider.class, method="deleteByExample")
    int deleteByExample(TParkPortCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_park_port",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_park_port (id, park_id, ",
        "port_id, port_name, ",
        "port_type, computer_index, ",
        "park_name, lane_control_sn, ",
        "ipc_ip, ipc_sn, aux_ipc1_sn, ",
        "aux_ipc2_sn, area_number, ",
        "intervene, actived, ",
        "lots_led_ip, lots_led_str, ",
        "is_in_car_update, lane_rx_mode, ",
        "voice_mode, voice_volume, ",
        "ipc_type)",
        "values (#{id,jdbcType=INTEGER}, #{parkId,jdbcType=INTEGER}, ",
        "#{portId,jdbcType=INTEGER}, #{portName,jdbcType=VARCHAR}, ",
        "#{portType,jdbcType=INTEGER}, #{computerIndex,jdbcType=VARCHAR}, ",
        "#{parkName,jdbcType=VARCHAR}, #{laneControlSn,jdbcType=VARCHAR}, ",
        "#{ipcIp,jdbcType=VARCHAR}, #{ipcSn,jdbcType=VARCHAR}, #{auxIpc1Sn,jdbcType=VARCHAR}, ",
        "#{auxIpc2Sn,jdbcType=VARCHAR}, #{areaNumber,jdbcType=INTEGER}, ",
        "#{intervene,jdbcType=INTEGER}, #{actived,jdbcType=INTEGER}, ",
        "#{lotsLedIp,jdbcType=VARCHAR}, #{lotsLedStr,jdbcType=VARCHAR}, ",
        "#{isInCarUpdate,jdbcType=INTEGER}, #{laneRxMode,jdbcType=INTEGER}, ",
        "#{voiceMode,jdbcType=INTEGER}, #{voiceVolume,jdbcType=INTEGER}, ",
        "#{ipcType,jdbcType=INTEGER})"
    })
    int insert(TParkPort record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @InsertProvider(type=TParkPortSqlProvider.class, method="insertSelective")
    int insertSelective(TParkPort record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @SelectProvider(type=TParkPortSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="port_id", property="portId", jdbcType=JdbcType.INTEGER),
        @Result(column="port_name", property="portName", jdbcType=JdbcType.VARCHAR),
        @Result(column="port_type", property="portType", jdbcType=JdbcType.INTEGER),
        @Result(column="computer_index", property="computerIndex", jdbcType=JdbcType.VARCHAR),
        @Result(column="park_name", property="parkName", jdbcType=JdbcType.VARCHAR),
        @Result(column="lane_control_sn", property="laneControlSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipc_ip", property="ipcIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipc_sn", property="ipcSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="aux_ipc1_sn", property="auxIpc1Sn", jdbcType=JdbcType.VARCHAR),
        @Result(column="aux_ipc2_sn", property="auxIpc2Sn", jdbcType=JdbcType.VARCHAR),
        @Result(column="area_number", property="areaNumber", jdbcType=JdbcType.INTEGER),
        @Result(column="intervene", property="intervene", jdbcType=JdbcType.INTEGER),
        @Result(column="actived", property="actived", jdbcType=JdbcType.INTEGER),
        @Result(column="lots_led_ip", property="lotsLedIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="lots_led_str", property="lotsLedStr", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_in_car_update", property="isInCarUpdate", jdbcType=JdbcType.INTEGER),
        @Result(column="lane_rx_mode", property="laneRxMode", jdbcType=JdbcType.INTEGER),
        @Result(column="voice_mode", property="voiceMode", jdbcType=JdbcType.INTEGER),
        @Result(column="voice_volume", property="voiceVolume", jdbcType=JdbcType.INTEGER),
        @Result(column="ipc_type", property="ipcType", jdbcType=JdbcType.INTEGER)
    })
    List<TParkPort> selectByExample(TParkPortCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, park_id, port_id, port_name, port_type, computer_index, park_name, lane_control_sn, ",
        "ipc_ip, ipc_sn, aux_ipc1_sn, aux_ipc2_sn, area_number, intervene, actived, lots_led_ip, ",
        "lots_led_str, is_in_car_update, lane_rx_mode, voice_mode, voice_volume, ipc_type",
        "from t_park_port",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="port_id", property="portId", jdbcType=JdbcType.INTEGER),
        @Result(column="port_name", property="portName", jdbcType=JdbcType.VARCHAR),
        @Result(column="port_type", property="portType", jdbcType=JdbcType.INTEGER),
        @Result(column="computer_index", property="computerIndex", jdbcType=JdbcType.VARCHAR),
        @Result(column="park_name", property="parkName", jdbcType=JdbcType.VARCHAR),
        @Result(column="lane_control_sn", property="laneControlSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipc_ip", property="ipcIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipc_sn", property="ipcSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="aux_ipc1_sn", property="auxIpc1Sn", jdbcType=JdbcType.VARCHAR),
        @Result(column="aux_ipc2_sn", property="auxIpc2Sn", jdbcType=JdbcType.VARCHAR),
        @Result(column="area_number", property="areaNumber", jdbcType=JdbcType.INTEGER),
        @Result(column="intervene", property="intervene", jdbcType=JdbcType.INTEGER),
        @Result(column="actived", property="actived", jdbcType=JdbcType.INTEGER),
        @Result(column="lots_led_ip", property="lotsLedIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="lots_led_str", property="lotsLedStr", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_in_car_update", property="isInCarUpdate", jdbcType=JdbcType.INTEGER),
        @Result(column="lane_rx_mode", property="laneRxMode", jdbcType=JdbcType.INTEGER),
        @Result(column="voice_mode", property="voiceMode", jdbcType=JdbcType.INTEGER),
        @Result(column="voice_volume", property="voiceVolume", jdbcType=JdbcType.INTEGER),
        @Result(column="ipc_type", property="ipcType", jdbcType=JdbcType.INTEGER)
    })
    TParkPort selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkPortSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TParkPort record, @Param("example") TParkPortCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkPortSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TParkPort record, @Param("example") TParkPortCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TParkPortSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TParkPort record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_park_port
     *
     * @mbg.generated
     */
    @Update({
        "update t_park_port",
        "set park_id = #{parkId,jdbcType=INTEGER},",
          "port_id = #{portId,jdbcType=INTEGER},",
          "port_name = #{portName,jdbcType=VARCHAR},",
          "port_type = #{portType,jdbcType=INTEGER},",
          "computer_index = #{computerIndex,jdbcType=VARCHAR},",
          "park_name = #{parkName,jdbcType=VARCHAR},",
          "lane_control_sn = #{laneControlSn,jdbcType=VARCHAR},",
          "ipc_ip = #{ipcIp,jdbcType=VARCHAR},",
          "ipc_sn = #{ipcSn,jdbcType=VARCHAR},",
          "aux_ipc1_sn = #{auxIpc1Sn,jdbcType=VARCHAR},",
          "aux_ipc2_sn = #{auxIpc2Sn,jdbcType=VARCHAR},",
          "area_number = #{areaNumber,jdbcType=INTEGER},",
          "intervene = #{intervene,jdbcType=INTEGER},",
          "actived = #{actived,jdbcType=INTEGER},",
          "lots_led_ip = #{lotsLedIp,jdbcType=VARCHAR},",
          "lots_led_str = #{lotsLedStr,jdbcType=VARCHAR},",
          "is_in_car_update = #{isInCarUpdate,jdbcType=INTEGER},",
          "lane_rx_mode = #{laneRxMode,jdbcType=INTEGER},",
          "voice_mode = #{voiceMode,jdbcType=INTEGER},",
          "voice_volume = #{voiceVolume,jdbcType=INTEGER},",
          "ipc_type = #{ipcType,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TParkPort record);

    @Select({
            "select",
            "id, park_id, port_id, port_name, port_type, computer_index, park_name, lane_control_sn, ",
            "ipc_ip, ipc_sn, aux_ipc1_sn, aux_ipc2_sn, area_number, intervene, actived, lots_led_ip, ",
            "lots_led_str, is_in_car_update, lane_rx_mode, voice_mode, voice_volume, ipc_type",
            "from t_park_port",
            "where park_id = #{parkId,jdbcType=INTEGER} and port_id = #{portId,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
            @Result(column="port_id", property="portId", jdbcType=JdbcType.INTEGER),
            @Result(column="port_name", property="portName", jdbcType=JdbcType.VARCHAR),
            @Result(column="port_type", property="portType", jdbcType=JdbcType.INTEGER),
            @Result(column="computer_index", property="computerIndex", jdbcType=JdbcType.VARCHAR),
            @Result(column="park_name", property="parkName", jdbcType=JdbcType.VARCHAR),
            @Result(column="lane_control_sn", property="laneControlSn", jdbcType=JdbcType.VARCHAR),
            @Result(column="ipc_ip", property="ipcIp", jdbcType=JdbcType.VARCHAR),
            @Result(column="ipc_sn", property="ipcSn", jdbcType=JdbcType.VARCHAR),
            @Result(column="aux_ipc1_sn", property="auxIpc1Sn", jdbcType=JdbcType.VARCHAR),
            @Result(column="aux_ipc2_sn", property="auxIpc2Sn", jdbcType=JdbcType.VARCHAR),
            @Result(column="area_number", property="areaNumber", jdbcType=JdbcType.INTEGER),
            @Result(column="intervene", property="intervene", jdbcType=JdbcType.INTEGER),
            @Result(column="actived", property="actived", jdbcType=JdbcType.INTEGER),
            @Result(column="lots_led_ip", property="lotsLedIp", jdbcType=JdbcType.VARCHAR),
            @Result(column="lots_led_str", property="lotsLedStr", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_in_car_update", property="isInCarUpdate", jdbcType=JdbcType.INTEGER),
            @Result(column="lane_rx_mode", property="laneRxMode", jdbcType=JdbcType.INTEGER),
            @Result(column="voice_mode", property="voiceMode", jdbcType=JdbcType.INTEGER),
            @Result(column="voice_volume", property="voiceVolume", jdbcType=JdbcType.INTEGER),
            @Result(column="ipc_type", property="ipcType", jdbcType=JdbcType.INTEGER)
    })
    TParkPort getTParkPortByParkIdAndPortId(Integer parkId, Integer portId);
}