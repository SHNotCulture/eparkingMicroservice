package com.eparkingdb.dao;

import com.common.entity.eparkingCloud.TCarownerPayment;
import com.common.entity.eparkingCloud.TCarownerPaymentCriteria;
import com.eparkingdb.dao.sqlProvider.TCarownerPaymentSqlProvider;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface TCarownerPaymentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @SelectProvider(type= TCarownerPaymentSqlProvider.class, method="countByExample")
    long countByExample(TCarownerPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TCarownerPaymentSqlProvider.class, method="deleteByExample")
    int deleteByExample(TCarownerPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_carowner_payment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_carowner_payment (id, company_id, ",
        "park_id, park_car_id, ",
        "carplate, recharge_no, ",
        "need_pay, actual_pay, ",
        "wallet_banance, oper_type, ",
        "pay_time, pay_type, ",
        "remark, operator)",
        "values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, ",
        "#{parkId,jdbcType=INTEGER}, #{parkCarId,jdbcType=INTEGER}, ",
        "#{carplate,jdbcType=VARCHAR}, #{rechargeNo,jdbcType=VARCHAR}, ",
        "#{needPay,jdbcType=DOUBLE}, #{actualPay,jdbcType=DOUBLE}, ",
        "#{walletBanance,jdbcType=VARCHAR}, #{operType,jdbcType=INTEGER}, ",
        "#{payTime,jdbcType=VARCHAR}, #{payType,jdbcType=SMALLINT}, ",
        "#{remark,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR})"
    })
    int insert(TCarownerPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @InsertProvider(type=TCarownerPaymentSqlProvider.class, method="insertSelective")
    int insertSelective(TCarownerPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @SelectProvider(type=TCarownerPaymentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="company_id", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_car_id", property="parkCarId", jdbcType=JdbcType.INTEGER),
        @Result(column="carplate", property="carplate", jdbcType=JdbcType.VARCHAR),
        @Result(column="recharge_no", property="rechargeNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="need_pay", property="needPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="actual_pay", property="actualPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="wallet_banance", property="walletBanance", jdbcType=JdbcType.VARCHAR),
        @Result(column="oper_type", property="operType", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_type", property="payType", jdbcType=JdbcType.SMALLINT),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="operator", property="operator", jdbcType=JdbcType.VARCHAR)
    })
    List<TCarownerPayment> selectByExample(TCarownerPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, company_id, park_id, park_car_id, carplate, recharge_no, need_pay, actual_pay, ",
        "wallet_banance, oper_type, pay_time, pay_type, remark, operator",
        "from t_carowner_payment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="company_id", property="companyId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="park_car_id", property="parkCarId", jdbcType=JdbcType.INTEGER),
        @Result(column="carplate", property="carplate", jdbcType=JdbcType.VARCHAR),
        @Result(column="recharge_no", property="rechargeNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="need_pay", property="needPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="actual_pay", property="actualPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="wallet_banance", property="walletBanance", jdbcType=JdbcType.VARCHAR),
        @Result(column="oper_type", property="operType", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_type", property="payType", jdbcType=JdbcType.SMALLINT),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="operator", property="operator", jdbcType=JdbcType.VARCHAR)
    })
    TCarownerPayment selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TCarownerPaymentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TCarownerPayment record, @Param("example") TCarownerPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TCarownerPaymentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TCarownerPayment record, @Param("example") TCarownerPaymentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TCarownerPaymentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TCarownerPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_carowner_payment
     *
     * @mbg.generated
     */
    @Update({
        "update t_carowner_payment",
        "set company_id = #{companyId,jdbcType=INTEGER},",
          "park_id = #{parkId,jdbcType=INTEGER},",
          "park_car_id = #{parkCarId,jdbcType=INTEGER},",
          "carplate = #{carplate,jdbcType=VARCHAR},",
          "recharge_no = #{rechargeNo,jdbcType=VARCHAR},",
          "need_pay = #{needPay,jdbcType=DOUBLE},",
          "actual_pay = #{actualPay,jdbcType=DOUBLE},",
          "wallet_banance = #{walletBanance,jdbcType=VARCHAR},",
          "oper_type = #{operType,jdbcType=INTEGER},",
          "pay_time = #{payTime,jdbcType=VARCHAR},",
          "pay_type = #{payType,jdbcType=SMALLINT},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "operator = #{operator,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TCarownerPayment record);
}