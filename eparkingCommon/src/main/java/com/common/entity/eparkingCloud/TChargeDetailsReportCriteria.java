package com.common.entity.eparkingCloud;

import java.util.ArrayList;
import java.util.List;

public class TChargeDetailsReportCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public TChargeDetailsReportCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIeparkingdbetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andParkIdIsNull() {
            addCriterion("park_id is null");
            return (Criteria) this;
        }

        public Criteria andParkIdIsNotNull() {
            addCriterion("park_id is not null");
            return (Criteria) this;
        }

        public Criteria andParkIdEqualTo(Integer value) {
            addCriterion("park_id =", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotEqualTo(Integer value) {
            addCriterion("park_id <>", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdGreaterThan(Integer value) {
            addCriterion("park_id >", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("park_id >=", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdLessThan(Integer value) {
            addCriterion("park_id <", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdLessThanOrEqualTo(Integer value) {
            addCriterion("park_id <=", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdIn(List<Integer> values) {
            addCriterion("park_id in", values, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotIn(List<Integer> values) {
            addCriterion("park_id not in", values, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIeparkingdbetween(Integer value1, Integer value2) {
            addCriterion("park_id between", value1, value2, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotBetween(Integer value1, Integer value2) {
            addCriterion("park_id not between", value1, value2, "parkId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIeparkingdbetween(Integer value1, Integer value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andChargeDateIsNull() {
            addCriterion("charge_date is null");
            return (Criteria) this;
        }

        public Criteria andChargeDateIsNotNull() {
            addCriterion("charge_date is not null");
            return (Criteria) this;
        }

        public Criteria andChargeDateEqualTo(String value) {
            addCriterion("charge_date =", value, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateNotEqualTo(String value) {
            addCriterion("charge_date <>", value, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateGreaterThan(String value) {
            addCriterion("charge_date >", value, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateGreaterThanOrEqualTo(String value) {
            addCriterion("charge_date >=", value, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateLessThan(String value) {
            addCriterion("charge_date <", value, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateLessThanOrEqualTo(String value) {
            addCriterion("charge_date <=", value, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateLike(String value) {
            addCriterion("charge_date like", value, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateNotLike(String value) {
            addCriterion("charge_date not like", value, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateIn(List<String> values) {
            addCriterion("charge_date in", values, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateNotIn(List<String> values) {
            addCriterion("charge_date not in", values, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateBetween(String value1, String value2) {
            addCriterion("charge_date between", value1, value2, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andChargeDateNotBetween(String value1, String value2) {
            addCriterion("charge_date not between", value1, value2, "chargeDate");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescIsNull() {
            addCriterion("car_nature_desc is null");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescIsNotNull() {
            addCriterion("car_nature_desc is not null");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescEqualTo(String value) {
            addCriterion("car_nature_desc =", value, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescNotEqualTo(String value) {
            addCriterion("car_nature_desc <>", value, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescGreaterThan(String value) {
            addCriterion("car_nature_desc >", value, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescGreaterThanOrEqualTo(String value) {
            addCriterion("car_nature_desc >=", value, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescLessThan(String value) {
            addCriterion("car_nature_desc <", value, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescLessThanOrEqualTo(String value) {
            addCriterion("car_nature_desc <=", value, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescLike(String value) {
            addCriterion("car_nature_desc like", value, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescNotLike(String value) {
            addCriterion("car_nature_desc not like", value, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescIn(List<String> values) {
            addCriterion("car_nature_desc in", values, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescNotIn(List<String> values) {
            addCriterion("car_nature_desc not in", values, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescBetween(String value1, String value2) {
            addCriterion("car_nature_desc between", value1, value2, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andCarNatureDescNotBetween(String value1, String value2) {
            addCriterion("car_nature_desc not between", value1, value2, "carNatureDesc");
            return (Criteria) this;
        }

        public Criteria andChargeAmountIsNull() {
            addCriterion("charge_amount is null");
            return (Criteria) this;
        }

        public Criteria andChargeAmountIsNotNull() {
            addCriterion("charge_amount is not null");
            return (Criteria) this;
        }

        public Criteria andChargeAmountEqualTo(Integer value) {
            addCriterion("charge_amount =", value, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountNotEqualTo(Integer value) {
            addCriterion("charge_amount <>", value, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountGreaterThan(Integer value) {
            addCriterion("charge_amount >", value, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("charge_amount >=", value, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountLessThan(Integer value) {
            addCriterion("charge_amount <", value, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountLessThanOrEqualTo(Integer value) {
            addCriterion("charge_amount <=", value, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountIn(List<Integer> values) {
            addCriterion("charge_amount in", values, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountNotIn(List<Integer> values) {
            addCriterion("charge_amount not in", values, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountBetween(Integer value1, Integer value2) {
            addCriterion("charge_amount between", value1, value2, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andChargeAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("charge_amount not between", value1, value2, "chargeAmount");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalIsNull() {
            addCriterion("needpay_total is null");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalIsNotNull() {
            addCriterion("needpay_total is not null");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalEqualTo(Double value) {
            addCriterion("needpay_total =", value, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalNotEqualTo(Double value) {
            addCriterion("needpay_total <>", value, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalGreaterThan(Double value) {
            addCriterion("needpay_total >", value, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("needpay_total >=", value, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalLessThan(Double value) {
            addCriterion("needpay_total <", value, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalLessThanOrEqualTo(Double value) {
            addCriterion("needpay_total <=", value, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalIn(List<Double> values) {
            addCriterion("needpay_total in", values, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalNotIn(List<Double> values) {
            addCriterion("needpay_total not in", values, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalBetween(Double value1, Double value2) {
            addCriterion("needpay_total between", value1, value2, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andNeedpayTotalNotBetween(Double value1, Double value2) {
            addCriterion("needpay_total not between", value1, value2, "needpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalIsNull() {
            addCriterion("actualpay_total is null");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalIsNotNull() {
            addCriterion("actualpay_total is not null");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalEqualTo(Double value) {
            addCriterion("actualpay_total =", value, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalNotEqualTo(Double value) {
            addCriterion("actualpay_total <>", value, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalGreaterThan(Double value) {
            addCriterion("actualpay_total >", value, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("actualpay_total >=", value, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalLessThan(Double value) {
            addCriterion("actualpay_total <", value, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalLessThanOrEqualTo(Double value) {
            addCriterion("actualpay_total <=", value, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalIn(List<Double> values) {
            addCriterion("actualpay_total in", values, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalNotIn(List<Double> values) {
            addCriterion("actualpay_total not in", values, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalBetween(Double value1, Double value2) {
            addCriterion("actualpay_total between", value1, value2, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andActualpayTotalNotBetween(Double value1, Double value2) {
            addCriterion("actualpay_total not between", value1, value2, "actualpayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalIsNull() {
            addCriterion("qpasspay_total is null");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalIsNotNull() {
            addCriterion("qpasspay_total is not null");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalEqualTo(Double value) {
            addCriterion("qpasspay_total =", value, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalNotEqualTo(Double value) {
            addCriterion("qpasspay_total <>", value, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalGreaterThan(Double value) {
            addCriterion("qpasspay_total >", value, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("qpasspay_total >=", value, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalLessThan(Double value) {
            addCriterion("qpasspay_total <", value, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalLessThanOrEqualTo(Double value) {
            addCriterion("qpasspay_total <=", value, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalIn(List<Double> values) {
            addCriterion("qpasspay_total in", values, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalNotIn(List<Double> values) {
            addCriterion("qpasspay_total not in", values, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalBetween(Double value1, Double value2) {
            addCriterion("qpasspay_total between", value1, value2, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria andQpasspayTotalNotBetween(Double value1, Double value2) {
            addCriterion("qpasspay_total not between", value1, value2, "qpasspayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalIsNull() {
            addCriterion("behalfpay_total is null");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalIsNotNull() {
            addCriterion("behalfpay_total is not null");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalEqualTo(Double value) {
            addCriterion("behalfpay_total =", value, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalNotEqualTo(Double value) {
            addCriterion("behalfpay_total <>", value, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalGreaterThan(Double value) {
            addCriterion("behalfpay_total >", value, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("behalfpay_total >=", value, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalLessThan(Double value) {
            addCriterion("behalfpay_total <", value, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalLessThanOrEqualTo(Double value) {
            addCriterion("behalfpay_total <=", value, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalIn(List<Double> values) {
            addCriterion("behalfpay_total in", values, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalNotIn(List<Double> values) {
            addCriterion("behalfpay_total not in", values, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalBetween(Double value1, Double value2) {
            addCriterion("behalfpay_total between", value1, value2, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria aneparkingdbehalfpayTotalNotBetween(Double value1, Double value2) {
            addCriterion("behalfpay_total not between", value1, value2, "behalfpayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalIsNull() {
            addCriterion("prepay_total is null");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalIsNotNull() {
            addCriterion("prepay_total is not null");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalEqualTo(Double value) {
            addCriterion("prepay_total =", value, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalNotEqualTo(Double value) {
            addCriterion("prepay_total <>", value, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalGreaterThan(Double value) {
            addCriterion("prepay_total >", value, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("prepay_total >=", value, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalLessThan(Double value) {
            addCriterion("prepay_total <", value, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalLessThanOrEqualTo(Double value) {
            addCriterion("prepay_total <=", value, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalIn(List<Double> values) {
            addCriterion("prepay_total in", values, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalNotIn(List<Double> values) {
            addCriterion("prepay_total not in", values, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalBetween(Double value1, Double value2) {
            addCriterion("prepay_total between", value1, value2, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andPrepayTotalNotBetween(Double value1, Double value2) {
            addCriterion("prepay_total not between", value1, value2, "prepayTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalIsNull() {
            addCriterion("coupon_total is null");
            return (Criteria) this;
        }

        public Criteria andCouponTotalIsNotNull() {
            addCriterion("coupon_total is not null");
            return (Criteria) this;
        }

        public Criteria andCouponTotalEqualTo(Double value) {
            addCriterion("coupon_total =", value, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalNotEqualTo(Double value) {
            addCriterion("coupon_total <>", value, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalGreaterThan(Double value) {
            addCriterion("coupon_total >", value, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("coupon_total >=", value, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalLessThan(Double value) {
            addCriterion("coupon_total <", value, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalLessThanOrEqualTo(Double value) {
            addCriterion("coupon_total <=", value, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalIn(List<Double> values) {
            addCriterion("coupon_total in", values, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalNotIn(List<Double> values) {
            addCriterion("coupon_total not in", values, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalBetween(Double value1, Double value2) {
            addCriterion("coupon_total between", value1, value2, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCouponTotalNotBetween(Double value1, Double value2) {
            addCriterion("coupon_total not between", value1, value2, "couponTotal");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(String value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(String value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(String value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(String value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(String value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(String value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLike(String value) {
            addCriterion("create_time like", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotLike(String value) {
            addCriterion("create_time not like", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<String> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<String> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(String value1, String value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(String value1, String value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andDutyPersonIsNull() {
            addCriterion("duty_person is null");
            return (Criteria) this;
        }

        public Criteria andDutyPersonIsNotNull() {
            addCriterion("duty_person is not null");
            return (Criteria) this;
        }

        public Criteria andDutyPersonEqualTo(String value) {
            addCriterion("duty_person =", value, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonNotEqualTo(String value) {
            addCriterion("duty_person <>", value, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonGreaterThan(String value) {
            addCriterion("duty_person >", value, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("duty_person >=", value, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonLessThan(String value) {
            addCriterion("duty_person <", value, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonLessThanOrEqualTo(String value) {
            addCriterion("duty_person <=", value, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonLike(String value) {
            addCriterion("duty_person like", value, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonNotLike(String value) {
            addCriterion("duty_person not like", value, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonIn(List<String> values) {
            addCriterion("duty_person in", values, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonNotIn(List<String> values) {
            addCriterion("duty_person not in", values, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonBetween(String value1, String value2) {
            addCriterion("duty_person between", value1, value2, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andDutyPersonNotBetween(String value1, String value2) {
            addCriterion("duty_person not between", value1, value2, "dutyPerson");
            return (Criteria) this;
        }

        public Criteria andOutPortIdIsNull() {
            addCriterion("out_port_id is null");
            return (Criteria) this;
        }

        public Criteria andOutPortIdIsNotNull() {
            addCriterion("out_port_id is not null");
            return (Criteria) this;
        }

        public Criteria andOutPortIdEqualTo(Integer value) {
            addCriterion("out_port_id =", value, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIdNotEqualTo(Integer value) {
            addCriterion("out_port_id <>", value, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIdGreaterThan(Integer value) {
            addCriterion("out_port_id >", value, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("out_port_id >=", value, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIdLessThan(Integer value) {
            addCriterion("out_port_id <", value, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIdLessThanOrEqualTo(Integer value) {
            addCriterion("out_port_id <=", value, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIdIn(List<Integer> values) {
            addCriterion("out_port_id in", values, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIdNotIn(List<Integer> values) {
            addCriterion("out_port_id not in", values, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIeparkingdbetween(Integer value1, Integer value2) {
            addCriterion("out_port_id between", value1, value2, "outPortId");
            return (Criteria) this;
        }

        public Criteria andOutPortIdNotBetween(Integer value1, Integer value2) {
            addCriterion("out_port_id not between", value1, value2, "outPortId");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalIsNull() {
            addCriterion("walletpay_total is null");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalIsNotNull() {
            addCriterion("walletpay_total is not null");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalEqualTo(Double value) {
            addCriterion("walletpay_total =", value, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalNotEqualTo(Double value) {
            addCriterion("walletpay_total <>", value, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalGreaterThan(Double value) {
            addCriterion("walletpay_total >", value, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("walletpay_total >=", value, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalLessThan(Double value) {
            addCriterion("walletpay_total <", value, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalLessThanOrEqualTo(Double value) {
            addCriterion("walletpay_total <=", value, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalIn(List<Double> values) {
            addCriterion("walletpay_total in", values, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalNotIn(List<Double> values) {
            addCriterion("walletpay_total not in", values, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalBetween(Double value1, Double value2) {
            addCriterion("walletpay_total between", value1, value2, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andWalletpayTotalNotBetween(Double value1, Double value2) {
            addCriterion("walletpay_total not between", value1, value2, "walletpayTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalIsNull() {
            addCriterion("inaccesspaid_total is null");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalIsNotNull() {
            addCriterion("inaccesspaid_total is not null");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalEqualTo(Double value) {
            addCriterion("inaccesspaid_total =", value, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalNotEqualTo(Double value) {
            addCriterion("inaccesspaid_total <>", value, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalGreaterThan(Double value) {
            addCriterion("inaccesspaid_total >", value, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("inaccesspaid_total >=", value, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalLessThan(Double value) {
            addCriterion("inaccesspaid_total <", value, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalLessThanOrEqualTo(Double value) {
            addCriterion("inaccesspaid_total <=", value, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalIn(List<Double> values) {
            addCriterion("inaccesspaid_total in", values, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalNotIn(List<Double> values) {
            addCriterion("inaccesspaid_total not in", values, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalBetween(Double value1, Double value2) {
            addCriterion("inaccesspaid_total between", value1, value2, "inaccesspaidTotal");
            return (Criteria) this;
        }

        public Criteria andInaccesspaidTotalNotBetween(Double value1, Double value2) {
            addCriterion("inaccesspaid_total not between", value1, value2, "inaccesspaidTotal");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_charge_details_report
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_charge_details_report
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}